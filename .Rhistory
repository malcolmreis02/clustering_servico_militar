s.manova <- summary(manova(Y ~ groups), tol = 0)
B <- s.manova$SS$groups
W <- s.manova$SS$Residuals
totalVar[i] <- det(B)/(det(B+W))
}
data.frame(totalVar, K) %>%
ggplot() +
geom_point(aes(x = K, y = totalVar)) +
geom_vline(xintercept = 5, col = "red") +
theme_classic() +
labs(title = "Metodo de Elbow",
y = "Variancia Total")
ggdendrogram(cluster) +
geom_hline(yintercept = h[which.max(K==5)], col = "red") +
labs(title = "Dendograma do Cluster")
groups <- cutree(cluster, h = h[which.max(K==5)])
plot(s1.sermil2022cps, col = groups)
for(i in unique(groups)){
APP <- s1.sermil2022cps[groups == i,]
xts <- chull(APP)
xts <- c(xts,xts[1])
lines(APP[xts,], col = i)
}
groups <- cutree(cluster, h = h[which.max(K==5)])
plot(s1.sermil2022cps, col = groups)
for(i in unique(groups)){
APP <- s1.sermil2022cps[groups == i,]
xts <- chull(APP)
xts <- c(xts,xts[1])
lines(APP[xts,], col = i)
}
groups <- cutree(cluster, h = h[which.max(K==5)])
plot(s1.sermil2022cps, col = groups)
for(i in unique(groups)){
APP <- s1.sermil2022cps[groups == i,]
xts <- chull(APP)
xts <- c(xts,xts[1])
lines(APP[xts,], col = i)
}
groups <- cutree(cluster, h = h[which.max(K==5)])
plot(s1.sermil2022cps, col = groups)
for(i in unique(groups)){
APP <- s1.sermil2022cps[groups == i,]
xts <- chull(APP)
xts <- c(xts,xts[1])
lines(APP[xts,], col = i)
}
groups <- cutree(cluster, h = h[which.max(K==5)])
plot(s1.sermil2022cps, col = groups)
for(i in unique(groups)){
APP <- s1.sermil2022cps[groups == i,]
xts <- chull(APP)
xts <- c(xts,xts[1])
lines(APP[xts,], col = i)
}
groups <- cutree(cluster, h = h[which.max(K==5)])
plot(s1.sermil2022cps, col = groups)
for(i in unique(groups)){
APP <- s1.sermil2022cps[groups == i,]
xts <- chull(APP)
xts <- c(xts,xts[1])
lines(APP[xts,], col = i)
}
groups <- cutree(cluster, h = h[which.max(K==5)])
plot(s1.sermil2022cps, col = groups)
for(i in unique(groups)){
APP <- s1.sermil2022cps[groups == i,]
xts <- chull(APP)
xts <- c(xts,xts[1])
lines(APP[xts,], col = i)
}
groups <- cutree(cluster, h = h[which.max(K==5)])
plot(s1.sermil2022cps, col = groups)
for(i in unique(groups)){
APP <- s1.sermil2022cps[groups == i,]
xts <- chull(APP)
xts <- c(xts,xts[1])
lines(APP[xts,], col = i)
}
groups
s1.sermil2022cps
s1.sermil2022cps %>% mutate(groups = groups)
s1.sermil2022cps %>% mutate(groups = groups) %>%
ggplot() +
geom_point(aes(x = PESO, y = ALTURA, col = groups))
s1.sermil2022cps %>% mutate(groups = groups) %>%
ggplot() +
geom_point(aes(x = PESO, y = ALTURA, col = as.factor(groups)))
groups <- cutree(cluster, h = h[which.max(K==5)])
plot(s1.sermil2022cps, col = groups)
for(i in unique(groups)){
APP <- s1.sermil2022cps[groups == i,]
xts <- chull(APP)
xts <- c(xts,xts[1])
lines(APP[xts,], col = i)
}
s1.sermil2022cps %>% mutate(groups = groups) %>%
ggplot() +
geom_point(aes(x = PESO, y = ALTURA, col = as.factor(groups))) +
theme_classic()
?geom_smooth
s1.sermil2022cps %>% mutate(groups = groups) %>%
ggplot() +
geom_point(aes(x = PESO, y = ALTURA, col = as.factor(groups))) +
geom_smooth() +
theme_classic()
?geom_point
s1.sermil2022cps %>% mutate(groups = groups) %>%
ggplot() +
geom_point(aes(x = PESO, y = ALTURA, col = as.factor(groups))) +
stat_ellipse(type = "t",geom = "polygon",alpha = 0.4) +
theme_classic()
s1.sermil2022cps %>% mutate(groups = groups) %>%
ggplot() +
geom_point(aes(x = PESO, y = ALTURA, col = as.factor(groups))) +
stat_ellipse(type = "t",geom = "polygon",alpha = 0.4) +
dataEllipse::stat_ellipse() +
theme_classic()
install.packages("dataEllipse")
s1.sermil2022cps %>% mutate(groups = groups) %>%
ggplot() +
geom_point(aes(x = PESO, y = ALTURA, col = as.factor(groups))) +
stat_ellipse(type = "t",geom = "polygon",alpha = 0.4) +
dataEllipse::stat_ellipse() +
theme_classic()
library(dataEllipse)
s1.sermil2022cps %>% mutate(groups = groups) %>%
ggplot() +
geom_point(aes(x = PESO, y = ALTURA, col = as.factor(groups))) +
stat_ellipse(type = "t",geom = "polygon",alpha = 0.4)
s1.sermil2022cps %>% mutate(groups = groups) %>%
ggplot() +
geom_point(aes(x = PESO, y = ALTURA, col = as.factor(groups))) +
stat_ellipse()
s1.sermil2022cps %>% mutate(groups = groups) %>%
ggplot(aes(x = PESO, y = ALTURA, col = as.factor(groups))) +
geom_point() +
stat_ellipse()
s1.sermil2022cps %>% mutate(groups = groups) %>%
ggplot(aes(x = PESO, y = ALTURA, col = as.factor(groups))) +
geom_point() +
stat_ellipse() +
geom_smooth()
groups <- cutree(cluster, h = h[which.max(K==5)])
plot(s1.sermil2022cps, col = groups)
for(i in unique(groups)){
APP <- s1.sermil2022cps[groups == i,]
xts <- chull(APP)
xts <- c(xts,xts[1])
lines(APP[xts,], col = i)
}
s1.sermil2022cps %>% mutate(groups = groups) %>%
ggplot(aes(x = PESO, y = ALTURA, col = as.factor(groups))) +
geom_point() +
stat_ellipse()
s1.sermil2022cps %>% mutate(groups = groups) %>%
ggplot(aes(x = PESO, y = ALTURA, col = as.factor(groups))) +
geom_point() +
stat_ellipse() +
theme_classic() +
labs(col = "Grupos")
s1.sermil2022cps %>% mutate(groups = groups) %>%
ggplot(aes(x = PESO, y = ALTURA, col = as.factor(groups))) +
geom_point() +
stat_ellipse(geom = "polygon",alpha = 0.4) +
theme_classic() +
labs(col = "Grupos")
groups <- cutree(cluster, h = h[which.max(K==5)])
plot(s1.sermil2022cps, col = groups)
for(i in unique(groups)){
APP <- s1.sermil2022cps[groups == i,]
xts <- chull(APP)
xts <- c(xts,xts[1])
lines(APP[xts,], col = i)
}
s1.sermil2022cps %>% mutate(groups = groups) %>%
ggplot(aes(x = PESO, y = ALTURA, col = as.factor(groups))) +
geom_point() +
stat_ellipse(geom = "polygon",alpha = 0.2) +
theme_classic() +
labs(col = "Grupos")
groups <- cutree(cluster, h = h[which.max(K==5)])
plot(s1.sermil2022cps, col = groups)
for(i in unique(groups)){
APP <- s1.sermil2022cps[groups == i,]
xts <- chull(APP)
xts <- c(xts,xts[1])
lines(APP[xts,], col = i)
}
s1.sermil2022cps %>% mutate(groups = groups) %>%
ggplot(aes(x = PESO, y = ALTURA, col = as.factor(groups), fill = as.factor(groups))) +
geom_point() +
stat_ellipse(geom = "polygon",alpha = 0.2) +
theme_classic() +
labs(col = "Grupos")
s1.sermil2022cps %>% mutate(groups = groups) %>%
ggplot(aes(x = PESO, y = ALTURA,  fill = as.factor(groups))) +
geom_point() +
stat_ellipse(geom = "polygon",alpha = 0.2) +
theme_classic() +
labs(col = "Grupos")
ps)
s1.sermil2022cps %>% mutate(groups = groups) %>%
ggplot(aes(x = PESO, y = ALTURA, col = as.factor(groups))) +
geom_point() +
stat_ellipse(geom = "polygon",alpha = 0.2, fill = as.factor(groups)) +
theme_classic() +
labs(col = "Grupos")
s1.sermil2022cps %>% mutate(groups = groups) %>%
ggplot(aes(x = PESO, y = ALTURA, col = as.factor(groups))) +
geom_point() +
stat_ellipse(geom = "polygon",alpha = 0.2, aes(fill = as.factor(groups))) +
theme_classic() +
labs(col = "Grupos")
s1.sermil2022cps %>% mutate(groups = groups) %>%
ggplot(aes(x = PESO, y = ALTURA, col = as.factor(groups))) +
geom_point() +
stat_ellipse(geom = "polygon",alpha = 0.2, aes(fill = as.factor(groups))) +
theme_classic() +
labs(col = "Grupos") +
geom_col(aes(fill = cut), show.legend = FALSE)
s1.sermil2022cps %>% mutate(groups = groups) %>%
ggplot(aes(x = PESO, y = ALTURA, col = as.factor(groups))) +
geom_point() +
stat_ellipse(geom = "polygon",alpha = 0.2, aes(fill = as.factor(groups))) +
theme_classic() +
labs(col = "Grupos") +
geom_col( show.legend = FALSE)
s1.sermil2022cps %>% mutate(groups = groups) %>%
ggplot(aes(x = PESO, y = ALTURA, col = as.factor(groups))) +
geom_point() +
stat_ellipse(geom = "polygon",alpha = 0.2, aes(fill = as.factor(groups), show.legend = FALSE)) +
theme_classic() +
labs(col = "Grupos")
s1.sermil2022cps %>% mutate(groups = groups) %>%
ggplot(aes(x = PESO, y = ALTURA, col = as.factor(groups))) +
geom_point() +
stat_ellipse(geom = "polygon",alpha = 0.2, aes(fill = as.factor(groups)), show.legend = FALSE) +
theme_classic() +
labs(col = "Grupos")
s1.sermil2022cps %>% mutate(groups = groups) %>%
ggplot(aes(x = PESO, y = ALTURA, col = as.factor(groups))) +
geom_point() +
stat_ellipse(geom = "polygon",alpha = 0.2, aes(fill = as.factor(groups)), show.legend = FALSE) +
theme_classic() +
labs(col = "Grupos")
knitr::opts_chunk$set(echo = FALSE, include = TRUE, fig.align = "center", fig.pos = "ht")
s1.sermil2022cps %>% mutate(groups = groups) %>%
ggplot(aes(x = PESO, y = ALTURA, col = as.factor(groups))) +
geom_point() +
stat_ellipse(geom = "polygon",alpha = 0.2, aes(fill = as.factor(groups)), show.legend = FALSE) +
theme_classic() +
labs(col = "Grupos")
s1.sermil2022cps %>% mutate(groups = groups) %>%
ggplot(aes(x = PESO, y = ALTURA, col = as.factor(groups))) +
geom_point() +
stat_ellipse(geom = "polygon",alpha = 0.2, aes(fill = as.factor(groups)), show.legend = FALSE) +
theme_classic() +
labs(col = "Grupos")
s1.sermil2022cps %>% mutate(groups = groups) %>%
ggplot(aes(x = PESO, y = ALTURA, col = as.factor(groups))) +
geom_point() +
stat_ellipse(geom = "polygon",alpha = 0.2, aes(fill = as.factor(groups)), show.legend = FALSE) +
theme_classic() +
labs(col = "Grupos")
knitr::opts_chunk$set(echo = FALSE, include = TRUE, fig.align = "center", fig.pos = "ht")
library(readr) # ler o arquivo
library(dplyr) # manipular o banco
library(ggplot2) # fazer graficos
library(magrittr) # usar os pipes
library(tidyr) # usar o drop_na
library(ggdendro) # dendograma com ggplot
sermil2022cps <- read_csv("sermil2022cps.csv", col_select = c(PESO, ALTURA))
sermil2022cps %<>% drop_na() # tirando as linhas com celulas vazias
set.seed(123456) # semente aleatoria
s1.sermil2022cps <- sermil2022cps %>% slice_sample(n = 100)
s1.sermil2022cps %>%
ggplot() +
geom_point(aes(x = PESO, y = ALTURA)) +
theme_classic()
# clusterizando pelo metodo complete linkage
cluster <- hclust(dist(s1.sermil2022cps), method = "complete")
h <- seq(0, 30, by = 1)
N <- nrow(s1.sermil2022cps)
totalVar <- numeric(length(h))
K <- numeric(length(h))
Y <- with(s1.sermil2022cps, cbind(ALTURA, PESO))
for(i in seq_along(h)){
groups <- factor(cutree(cluster, h = h[i]))
K[i] <- length(levels(groups))
s.manova <- summary(manova(Y ~ groups), tol = 0)
B <- s.manova$SS$groups
W <- s.manova$SS$Residuals
totalVar[i] <- det(B)/(det(B+W))
}
data.frame(totalVar, K) %>%
ggplot() +
geom_point(aes(x = K, y = totalVar)) +
geom_vline(xintercept = 5, col = "red") +
theme_classic() +
labs(title = "Metodo de Elbow",
y = "Variancia Total")
ggdendrogram(cluster) +
geom_hline(yintercept = h[which.max(K==5)], col = "red") +
labs(title = "Dendograma do Cluster")
s1.sermil2022cps %>% mutate(groups = groups) %>%
ggplot(aes(x = PESO, y = ALTURA, col = as.factor(groups))) +
geom_point() +
stat_ellipse(geom = "polygon",alpha = 0.2, aes(fill = as.factor(groups)), show.legend = FALSE) +
theme_classic() +
labs(col = "Grupos")
groups
# clusterizando pelo metodo complete linkage
cluster <- hclust(dist(s1.sermil2022cps), method = "complete")
h <- seq(0, 30, by = 1)
N <- nrow(s1.sermil2022cps)
totalVar <- numeric(length(h))
K <- numeric(length(h))
Y <- with(s1.sermil2022cps, cbind(ALTURA, PESO))
for(i in seq_along(h)){
groups <- factor(cutree(cluster, h = h[i]))
K[i] <- length(levels(groups))
s.manova <- summary(manova(Y ~ groups), tol = 0)
B <- s.manova$SS$groups
W <- s.manova$SS$Residuals
totalVar[i] <- det(B)/(det(B+W))
}
data.frame(totalVar, K) %>%
ggplot() +
geom_point(aes(x = K, y = totalVar)) +
geom_vline(xintercept = 5, col = "red") +
theme_classic() +
labs(title = "Metodo de Elbow",
y = "Variancia Total")
ggdendrogram(cluster) +
geom_hline(yintercept = h[which.max(K==5)], col = "red") +
labs(title = "Dendograma do Cluster")
groups
# clusterizando pelo metodo complete linkage
cluster <- hclust(dist(s1.sermil2022cps), method = "complete")
h <- seq(0, 30, by = 1)
N <- nrow(s1.sermil2022cps)
totalVar <- numeric(length(h))
K <- numeric(length(h))
Y <- with(s1.sermil2022cps, cbind(ALTURA, PESO))
for(i in seq_along(h)){
groups <- factor(cutree(cluster, h = h[i]))
K[i] <- length(levels(groups))
s.manova <- summary(manova(Y ~ groups), tol = 0)
B <- s.manova$SS$groups
W <- s.manova$SS$Residuals
totalVar[i] <- det(B)/(det(B+W))
}
data.frame(totalVar, K) %>%
ggplot() +
geom_point(aes(x = K, y = totalVar)) +
geom_vline(xintercept = 5, col = "red") +
theme_classic() +
labs(title = "Metodo de Elbow",
y = "Variancia Total")
s1.sermil2022cps %>%
ggplot() +
geom_point(aes(x = PESO, y = ALTURA)) +
theme_classic()
sermil2022cps %<>% drop_na() # tirando as linhas com celulas vazias
set.seed(123456) # semente aleatoria
s1.sermil2022cps <- sermil2022cps %>% slice_sample(n = 100)
s1.sermil2022cps %>%
ggplot() +
geom_point(aes(x = PESO, y = ALTURA)) +
theme_classic()
# clusterizando pelo metodo complete linkage
cluster <- hclust(dist(s1.sermil2022cps), method = "complete")
h <- seq(0, 30, by = 1)
N <- nrow(s1.sermil2022cps)
totalVar <- numeric(length(h))
K <- numeric(length(h))
Y <- with(s1.sermil2022cps, cbind(ALTURA, PESO))
for(i in seq_along(h)){
groups <- factor(cutree(cluster, h = h[i]))
K[i] <- length(levels(groups))
s.manova <- summary(manova(Y ~ groups), tol = 0)
B <- s.manova$SS$groups
W <- s.manova$SS$Residuals
totalVar[i] <- det(B)/(det(B+W))
}
data.frame(totalVar, K) %>%
ggplot() +
geom_point(aes(x = K, y = totalVar)) +
geom_vline(xintercept = 5, col = "red") +
theme_classic() +
labs(title = "Metodo de Elbow",
y = "Variancia Total")
groups <- cutree(cluster, h = h[which.max(K==5)])
s1.sermil2022cps %>% mutate(groups = groups) %>%
ggplot(aes(x = PESO, y = ALTURA, col = as.factor(groups))) +
geom_point() +
stat_ellipse(geom = "polygon",alpha = 0.2, aes(fill = as.factor(groups)), show.legend = FALSE) +
theme_classic() +
labs(col = "Grupos")
s1.sermil2022cps %>% mutate(groups = groups) %>%
ggplot(aes(x = PESO, y = ALTURA, col = as.factor(groups))) +
geom_point() +
stat_ellipse(geom = "polygon",alpha = 0.2, aes(fill = as.factor(groups)), show.legend = FALSE, linetype = 2) +
theme_classic() +
labs(col = "Grupos")
s1.sermil2022cps %>% mutate(groups = groups) %>%
ggplot(aes(x = PESO, y = ALTURA, col = as.factor(groups))) +
geom_point() +
stat_ellipse(geom = "polygon",alpha = 0.2, aes(fill = as.factor(groups)), show.legend = FALSE, linetype = 1) +
theme_classic() +
labs(col = "Grupos")
s1.sermil2022cps %>% mutate(groups = groups) %>%
ggplot(aes(x = PESO, y = ALTURA, col = as.factor(groups))) +
geom_point() +
stat_ellipse(geom = "polygon",alpha = 0.2, aes(fill = as.factor(groups)), show.legend = FALSE, linetype = 3) +
theme_classic() +
labs(col = "Grupos")
s1.sermil2022cps %>% mutate(groups = groups) %>%
ggplot(aes(x = PESO, y = ALTURA, col = as.factor(groups))) +
geom_point() +
stat_ellipse(geom = "polygon",alpha = 0.2, aes(fill = as.factor(groups)), show.legend = FALSE, linetype = 4) +
theme_classic() +
labs(col = "Grupos")
s1.sermil2022cps %>% mutate(groups = groups) %>%
ggplot(aes(x = PESO, y = ALTURA, col = as.factor(groups))) +
geom_point() +
stat_ellipse(geom = "polygon",alpha = 0.2, aes(fill = as.factor(groups)), show.legend = FALSE, linetype = 5) +
theme_classic() +
labs(col = "Grupos")
s1.sermil2022cps %>% mutate(groups = groups) %>%
ggplot(aes(x = PESO, y = ALTURA, col = as.factor(groups))) +
geom_point() +
stat_ellipse(geom = "polygon",alpha = 0.2, aes(fill = as.factor(groups)), show.legend = FALSE, linetype = 6) +
theme_classic() +
labs(col = "Grupos")
s1.sermil2022cps %>% mutate(groups = groups) %>%
ggplot(aes(x = PESO, y = ALTURA, col = as.factor(groups))) +
geom_point() +
stat_ellipse(geom = "polygon",alpha = 0.2, aes(fill = as.factor(groups)), show.legend = FALSE, linetype = 7) +
theme_classic() +
labs(col = "Grupos")
s1.sermil2022cps %>% mutate(groups = groups) %>%
ggplot(aes(x = PESO, y = ALTURA, col = as.factor(groups))) +
geom_point() +
stat_ellipse(geom = "polygon",alpha = 0.2, aes(fill = as.factor(groups)), show.legend = FALSE, linetype = 1) +
theme_classic() +
labs(col = "Grupos")
s1.sermil2022cps %>% mutate(groups = groups) %>%
ggplot(aes(x = PESO, y = ALTURA, col = as.factor(groups))) +
geom_point() +
stat_ellipse(geom = "polygon",alpha = 0.1, aes(fill = as.factor(groups)), show.legend = FALSE, linetype = 1) +
theme_classic() +
labs(col = "Grupos")
s1.sermil2022cps %>% mutate(groups = groups) %>%
ggplot(aes(x = PESO, y = ALTURA, col = as.factor(groups))) +
geom_point() +
stat_ellipse(geom = "polygon",alpha = 0.15, aes(fill = as.factor(groups)), show.legend = FALSE, linetype = 1) +
theme_classic() +
labs(col = "Grupos")
s1.sermil2022cps %>% mutate(groups = groups) %>%
ggplot(aes(x = PESO, y = ALTURA, col = as.factor(groups))) +
geom_point() +
stat_ellipse(geom = "polygon",alpha = 0.18, aes(fill = as.factor(groups)), show.legend = FALSE, linetype = 1) +
theme_classic() +
labs(col = "Grupos")
s1.sermil2022cps %>% mutate(groups = groups) %>%
ggplot(aes(x = PESO, y = ALTURA, col = as.factor(groups))) +
geom_point() +
stat_ellipse(geom = "polygon",alpha = 0.18, aes(fill = as.factor(groups)), show.legend = FALSE, linetype = 1, type = "norm") +
theme_classic() +
labs(col = "Grupos")
s1.sermil2022cps %>% mutate(groups = groups) %>%
ggplot(aes(x = PESO, y = ALTURA, col = as.factor(groups))) +
geom_point() +
stat_ellipse(geom = "polygon",alpha = 0.18, aes(fill = as.factor(groups)), show.legend = FALSE, linetype = 1, type = "euclid") +
theme_classic() +
labs(col = "Grupos")
s1.sermil2022cps %>% mutate(groups = groups) %>%
ggplot(aes(x = PESO, y = ALTURA, col = as.factor(groups))) +
geom_point() +
stat_ellipse(geom = "polygon",alpha = 0.18, aes(fill = as.factor(groups)), show.legend = FALSE, linetype = 1) +
theme_classic() +
labs(col = "Grupos")
s1.sermil2022cps %>% mutate(groups = groups) %>%
ggplot(aes(x = PESO, y = ALTURA, col = as.factor(groups))) +
geom_point() +
stat_ellipse(geom = "polygon",alpha = 0.18, aes(fill = as.factor(groups)), show.legend = FALSE) +
theme_classic() +
labs(col = "Grupos")
```{r vendo_cluster_LL, fig.cap="Diagrama de pontos apresentando os grupos obtidos por complete linkage", fig.height=3, fig.width=7}
groups <- cutree(cluster, h = h[which.max(K==5)])
s1.sermil2022cps %>% mutate(groups = groups) %>%
ggplot(aes(x = PESO, y = ALTURA, col = as.factor(groups))) +
geom_point() +
stat_ellipse(geom = "polygon", alpha = 0.18, aes(fill = as.factor(groups)), show.legend = FALSE) +
theme_classic() +
labs(col = "Grupos")
groups <- cutree(cluster, h = h[which.max(K==5)])
s1.sermil2022cps %>% mutate(groups = groups) %>%
ggplot(aes(x = PESO, y = ALTURA, col = as.factor(groups))) +
geom_point() +
stat_ellipse(geom = "polygon", alpha = 0.18, aes(fill = as.factor(groups)), show.legend = FALSE) +
theme_classic() +
labs(col = "Grupos")
groups <- cutree(cluster, h = h[which.max(K==5)])
s1.sermil2022cps %>% mutate(groups = groups) %>%
ggplot(aes(x = PESO, y = ALTURA, col = as.factor(groups))) +
geom_point() +
stat_ellipse(geom = "polygon", alpha = 0.18, aes(fill = as.factor(groups)), show.legend = FALSE) +
theme_classic() +
labs(col = "Grupos")
